<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      mc:Ignorable="d"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      d:DesignWidth="1500" d:DesignHeight="900">
	<!-- styles -->
	<Grid.Resources>
		<SolidColorBrush x:Key="Brush.Background.Normal" Color="Black" Opacity="0.5"/>
		<SolidColorBrush x:Key="Brush.Foreground.Normal" Color="White" Opacity="1"/>
		<SolidColorBrush x:Key="Brush.Background.Pressed" Color="Black" Opacity="0.8"/>
		<SolidColorBrush x:Key="Brush.Foreground.Pressed" Color="White" Opacity="1"/>
		<SolidColorBrush x:Key="Brush.Border.Over" Color="White" Opacity="0.5"/>
		<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
			<Setter Property="FontFamily" Value="/#VCR OSD Mono"/>
		</Style>
		<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
			<Setter Property="FontFamily" Value="/#VCR OSD Mono"/>
		</Style>
		<Style TargetType="TextBlock">
			<Setter Property="FontFamily" Value="/#VCR OSD Mono"/>
		</Style>
		<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
			<Setter Property="FontFamily" Value="/#VCR OSD Mono"/>
		</Style>

		<!-- story boards -->
		<Storyboard x:Key="MainMenu">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainMenuView">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainMenuView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SettingsView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectWorldView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SelectWorldView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="Settings">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainMenuView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainMenuView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsView">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SettingsView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectWorldView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SelectWorldView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="SelectWorld">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MainMenuView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="MainMenuView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsView">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SettingsView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectWorldView">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="SelectWorldView">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
	</Grid.Resources>

	<!-- states -->
	<VisualStateManager.VisualStateGroups>
		<VisualStateGroup x:Name="States">
			<VisualState x:Name="MainMenu" Storyboard="{StaticResource MainMenu}"/>
			<VisualState x:Name="Settings" Storyboard="{StaticResource Settings}"/>
			<VisualState x:Name="SelectWorld" Storyboard="{StaticResource SelectWorld}"/>
		</VisualStateGroup>
	</VisualStateManager.VisualStateGroups>

	<b:Interaction.Triggers>
		<ei:DataTrigger Binding="{Binding State}" Value="{Binding State}">
			<ei:GoToStateAction StateName="{Binding State}"/>
		</ei:DataTrigger>
	</b:Interaction.Triggers>

	<Grid.ColumnDefinitions>
		<ColumnDefinition Width="80*"/>
		<ColumnDefinition Width="300*"/>
		<ColumnDefinition Width="80*"/>
	</Grid.ColumnDefinitions>

	<!-- Main Menu -->
	<Grid x:Name="MainMenuView" Grid.Column="1">
		<Grid.RowDefinitions>
			<RowDefinition Height="300*"/>
			<RowDefinition Height="300*"/>
			<RowDefinition Height="100*"/>
		</Grid.RowDefinitions>

		<Image Source="GUI/title.png" VerticalAlignment="Center" />
		<Viewbox Grid.Row="1" VerticalAlignment="Center" Stretch="Uniform">
			<StackPanel>
				<Button x:Name="startGame" Content="Start Game" Margin="0 0 0 10" Height="50" Width="600" />
				<Button x:Name="settings" Content="Settings" Margin="0 0 0 10" Height="50" Width="600" />
				<Button x:Name="exit" Content="Exit" Margin="0 0 0 10" Height="50" Width="600"/>
			</StackPanel>
		</Viewbox>
	</Grid>

	<!-- Settings View -->
	<Grid x:Name="SettingsView" Grid.Column="1">
		<Grid.RowDefinitions>
			<RowDefinition Height="120*"/>
			<RowDefinition Height="400*"/>
			<RowDefinition Height="50*"/>
		</Grid.RowDefinitions>
		<TextBlock Grid.Row="0" Text="Settings" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="128"/>
		<Viewbox Grid.Row="1" Stretch="Uniform" VerticalAlignment="Center">
			<StackPanel Width="Auto">
				<StackPanel TextElement.Foreground="White">
					<StackPanel.Background>
						<SolidColorBrush Color="Black" Opacity="0.8"/>
					</StackPanel.Background>
					<TextBlock Text="Rendering" FontSize="20" Margin="20,10,0,20" HorizontalAlignment="Left"/>
					<Grid Margin="20,0,20,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*"/>
							<ColumnDefinition Width="3*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="1*"/>
							<RowDefinition Height="1*"/>
							<RowDefinition Height="1*"/>
						</Grid.RowDefinitions>
						<TextBlock Grid.Column="0" Grid.Row="0" FontSize="16" HorizontalAlignment="Left"
								   Text="{Binding FOV, StringFormat=FOV ({0})}"/>
						<Slider Grid.Column="1" Grid.Row="0" Width="300" Height="30" Margin="8,0,0,0" TickPlacement="TopLeft"
								Minimum="1" Maximum="120" Value="{Binding FOV, Mode=TwoWay}" Interval="1"/>

						<TextBlock Grid.Column="0" Grid.Row="1" FontSize="16" HorizontalAlignment="Left"
								   Text="{Binding RenderDistance, StringFormat=Render Distance ({0} chunks)}"/>
						<Slider Grid.Column="1" Grid.Row="1" Width="300" Height="30" Margin="8,0,0,0" TickPlacement="TopLeft"
								Minimum="0" Maximum="8" Value="{Binding RenderDistanceTick, Mode=TwoWay}" Interval="1" IsSnapToTickEnabled="True" />

						<TextBlock Grid.Column="0" Grid.Row="2" FontSize="16" HorizontalAlignment="Left"
								   Text="{Binding MouseSensitivity, StringFormat=Mouse Sensitivity ({0:F2})}"/>
						<Slider Grid.Column="1" Grid.Row="2" Width="300" Height="30" Margin="8,0,0,0" TickPlacement="TopLeft"
								Minimum="0" Maximum="1" Value="{Binding MouseSensitivity, Mode=TwoWay}"/>

					</Grid>
					<CheckBox Margin="20,8,0,0" IsChecked="{Binding SmoothLighting, Mode=TwoWay}">Smooth lighting</CheckBox>
					<CheckBox Margin="20,8,0,0" IsChecked="{Binding NiceGrass, Mode=TwoWay}">Nice Grass</CheckBox>
					<CheckBox Margin="20,8,0,0" IsChecked="{Binding VSync, Mode=TwoWay}">VSync</CheckBox>
					<CheckBox Margin="20,8,0,20" IsChecked="{Binding Shadows, Mode=TwoWay}">Shadows</CheckBox>
				</StackPanel>
				<Button x:Name="Save" Content="Save" Margin="0 10 0 0"></Button>
			</StackPanel>
		</Viewbox>
	</Grid>
	<!-- Select World View -->
	<Grid x:Name="SelectWorldView" Grid.Column="1">
		<Grid.RowDefinitions>
			<RowDefinition Height="120*"/>
			<RowDefinition Height="400*"/>
			<RowDefinition Height="50*"/>
		</Grid.RowDefinitions>
		<TextBlock Grid.Row="0" Text="Select World" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="128"/>
		<Viewbox Grid.Row="1" Stretch="Uniform" VerticalAlignment="Center">
			<StackPanel TextElement.Foreground="White">
				<ListBox
				  x:Name="WorldList"
				  SelectionMode="Single"
				  Height="300"
				  ItemsSource="{Binding Worlds}"
				  ItemTemplate="{DynamicResource WorldItemTemplate}">
					<ListBox.Background>
						<SolidColorBrush Color="Black" Opacity="0.5"/>
					</ListBox.Background>

					<ListBox.Resources>
						<SolidColorBrush x:Key="Brush.Item.Over" Color="White" Opacity="0.2"/>
						<SolidColorBrush x:Key="Brush.Item.Selected" Color="Green" Opacity="0.6"/>
						<SolidColorBrush x:Key="Brush.Item.SelectedOver" Color="Green" Opacity="0.8"/>
						<!-- Select World - Item Template -->
						<DataTemplate x:Key="WorldItemTemplate">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBlock Text="{Binding Name}"
								           FontSize="16" FontFamily="/#VCR OSD Mono"
								           Margin="10"/>
							</Grid>
						</DataTemplate>
					</ListBox.Resources>
				</ListBox>
				<StackPanel Orientation="Horizontal" Margin="0 10 0 0">
					<TextBox x:Name="NewWorldNameTextBox" Foreground="Black" Placeholder="World Name" MinWidth="200"/>
					<Button x:Name="Create" Content="Create" Margin="10 0 0 0"></Button>
				</StackPanel>
				<Button x:Name="Back" Content="Back" Margin="0 10 0 0"></Button>
			</StackPanel>
		</Viewbox>
	</Grid>
</Grid>